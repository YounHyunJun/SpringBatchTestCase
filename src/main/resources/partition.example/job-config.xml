<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

    <batch:job id="myJob" job-repository="jobRepository">
        <batch:step id="master.Step">
            <batch:partition step="slave.Step" partitioner="myPartitioner">
                <batch:handler grid-size="2" task-executor="myTaskExecutor"></batch:handler>
            </batch:partition>
        </batch:step>
    </batch:job>

    <batch:step id="slave.Step">
        <batch:tasklet transaction-manager="transactionManager">
            <batch:chunk reader="pagingItemReader" writer="flatFileItemWriter" commit-interval="1"/>
        </batch:tasklet>
    </batch:step>

    <bean id="myTaskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>

    <bean id="myPartitioner" class="jun.partition.example.MyPartitioner"/>

    <bean id="pagingItemReader" class="jun.partition.example.CustomJdbcPagingItemReader" scope="step">
        <property name="dataSource" ref="dataSource"/>
        <property name="queryProvider">
            <bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
                <property name="dataSource" ref="dataSource"/>
                <property name="selectClause" value="select firstName, lastName, city, id"/>
                <property name="fromClause" value="from PERSON"/>
                <property name="whereClause" value="where id &gt;= :startingIndex and id &lt;= :endingIndex"/>
                <property name="sortKey" value="id"/>
            </bean>
        </property>
        <property name="parameterValues">
            <map>
                <entry key="startingIndex" value="#{stepExecutionContext[startingIndex]}"/>
                <entry key="endingIndex" value="#{stepExecutionContext[endingIndex]}"/>
            </map>
        </property>
        <property name="pageSize" value="5"/>
        <property name="rowMapper">
            <bean class="jun.partition.example.PersonMapper"/>
        </property>
    </bean>

    <bean id="flatFileItemWriter" class="jun.partition.example.CustomFlatFileItemWriter" scope="step">
        <property name="resource" value="file:d:/person.data#{stepExecutionContext[startingIndex]}-#{stepExecutionContext[endingIndex]}.txt"/>
        <property name="appendAllowed" value="false"/>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=","/>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="firstName, lastName, city"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

</beans>